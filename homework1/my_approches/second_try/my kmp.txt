int* fail(int p_len){
    int* failure = (int*)malloc(sizeof(int)*p_len);
    failure[0] = -1;
    int i = -1; int j = 1;
    while(j < p_len){
        while(pattern[i+1] != pattern[j]){
            if (i == -1) {
                break;
            }
            i = failure[i];    
        }
        if(pattern[j] == pattern[i+1]){
            failure[j++] = i + 1;
            i++;
        }
        else{
            failure[j++] = -1;
        }
    }
    return failure;
}

int match(int s_len, int p_len, int failure[]){
    int i = 0; int j = 0; int i_start = -1;
    while(i < s_len && j < p_len){
        if(string[i] == pattern[j]){
            if(i_start == -1) i_start = i;
            i++; j++;
        }
        else if (j == 0) {
            i++;
            i_start = -1;
        }
        else{
            if(failure[j-1] == -1) j = 0;
            else j = failure[j-1] + 1;
        }
        
    }
    return i_start;
}